//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("CheckbookModel", "FK_CategoryLedger", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(FrameworkDataFirst.Category), "Ledgers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FrameworkDataFirst.Ledger), true)]

#endregion

namespace FrameworkDataFirst
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class CheckbookContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new CheckbookContext object using the connection string found in the 'CheckbookContext' section of the application configuration file.
        /// </summary>
        public CheckbookContext() : base("name=CheckbookContext", "CheckbookContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CheckbookContext object.
        /// </summary>
        public CheckbookContext(string connectionString) : base(connectionString, "CheckbookContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new CheckbookContext object.
        /// </summary>
        public CheckbookContext(EntityConnection connection) : base(connection, "CheckbookContext")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ledger> Ledgers
        {
            get
            {
                if ((_Ledgers == null))
                {
                    _Ledgers = base.CreateObjectSet<Ledger>("Ledgers");
                }
                return _Ledgers;
            }
        }
        private ObjectSet<Ledger> _Ledgers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ledgers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLedgers(Ledger ledger)
        {
            base.AddObject("Ledgers", ledger);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CheckbookModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Category CreateCategory(global::System.Guid id, global::System.String name)
        {
            Category category = new Category();
            category.Id = id;
            category.Name = name;
            return category;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CheckbookModel", "FK_CategoryLedger", "Ledgers")]
        public EntityCollection<Ledger> Ledgers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ledger>("CheckbookModel.FK_CategoryLedger", "Ledgers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ledger>("CheckbookModel.FK_CategoryLedger", "Ledgers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="CheckbookModel", Name="Ledger")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ledger : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ledger object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateTime">Initial value of the DateTime property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="categoryId">Initial value of the CategoryId property.</param>
        /// <param name="payerId">Initial value of the PayerId property.</param>
        /// <param name="checkNumber">Initial value of the CheckNumber property.</param>
        /// <param name="invoiceNumber">Initial value of the InvoiceNumber property.</param>
        /// <param name="memo">Initial value of the Memo property.</param>
        /// <param name="category_Id">Initial value of the Category_Id property.</param>
        public static Ledger CreateLedger(global::System.Guid id, global::System.DateTime dateTime, global::System.Decimal amount, global::System.Guid categoryId, global::System.Guid payerId, global::System.String checkNumber, global::System.String invoiceNumber, global::System.String memo, global::System.Guid category_Id)
        {
            Ledger ledger = new Ledger();
            ledger.Id = id;
            ledger.DateTime = dateTime;
            ledger.Amount = amount;
            ledger.CategoryId = categoryId;
            ledger.PayerId = payerId;
            ledger.CheckNumber = checkNumber;
            ledger.InvoiceNumber = invoiceNumber;
            ledger.Memo = memo;
            ledger.Category_Id = category_Id;
            return ledger;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTime
        {
            get
            {
                return _DateTime;
            }
            set
            {
                OnDateTimeChanging(value);
                ReportPropertyChanging("DateTime");
                _DateTime = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTime");
                OnDateTimeChanged();
            }
        }
        private global::System.DateTime _DateTime;
        partial void OnDateTimeChanging(global::System.DateTime value);
        partial void OnDateTimeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private global::System.Guid _CategoryId;
        partial void OnCategoryIdChanging(global::System.Guid value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PayerId
        {
            get
            {
                return _PayerId;
            }
            set
            {
                OnPayerIdChanging(value);
                ReportPropertyChanging("PayerId");
                _PayerId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PayerId");
                OnPayerIdChanged();
            }
        }
        private global::System.Guid _PayerId;
        partial void OnPayerIdChanging(global::System.Guid value);
        partial void OnPayerIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CheckNumber
        {
            get
            {
                return _CheckNumber;
            }
            set
            {
                OnCheckNumberChanging(value);
                ReportPropertyChanging("CheckNumber");
                _CheckNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CheckNumber");
                OnCheckNumberChanged();
            }
        }
        private global::System.String _CheckNumber;
        partial void OnCheckNumberChanging(global::System.String value);
        partial void OnCheckNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvoiceNumber
        {
            get
            {
                return _InvoiceNumber;
            }
            set
            {
                OnInvoiceNumberChanging(value);
                ReportPropertyChanging("InvoiceNumber");
                _InvoiceNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvoiceNumber");
                OnInvoiceNumberChanged();
            }
        }
        private global::System.String _InvoiceNumber;
        partial void OnInvoiceNumberChanging(global::System.String value);
        partial void OnInvoiceNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Memo
        {
            get
            {
                return _Memo;
            }
            set
            {
                OnMemoChanging(value);
                ReportPropertyChanging("Memo");
                _Memo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Memo");
                OnMemoChanged();
            }
        }
        private global::System.String _Memo;
        partial void OnMemoChanging(global::System.String value);
        partial void OnMemoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Category_Id
        {
            get
            {
                return _Category_Id;
            }
            set
            {
                OnCategory_IdChanging(value);
                ReportPropertyChanging("Category_Id");
                _Category_Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Category_Id");
                OnCategory_IdChanged();
            }
        }
        private global::System.Guid _Category_Id;
        partial void OnCategory_IdChanging(global::System.Guid value);
        partial void OnCategory_IdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("CheckbookModel", "FK_CategoryLedger", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CheckbookModel.FK_CategoryLedger", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CheckbookModel.FK_CategoryLedger", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("CheckbookModel.FK_CategoryLedger", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("CheckbookModel.FK_CategoryLedger", "Categories", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
